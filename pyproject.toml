[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kafka-http-monitor"
description = 'Simple HTTP monitor publishing results over Kafka.'
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [{ name = "Johan Dahlin", email = "jdahlin@gmail.com" }]
classifiers = [
  # https://pypi.org/classifiers/
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["version"]
dependencies = [
    "asyncpg==0.27.0",
    "aiokafka==0.8.0",
    "httpx==0.23.3",
    "typer==0.8.0",
]

[tool.hatch.version]
path = "src/kafka_http_monitor/__version__.py"

[project.optional-dependencies]
lint = ["black==23.3.0", "ruff"]
types = ["mypy==1.1.1", "asyncpg-stubs", "pytest"]
test = ["pytest"]
dev = ["kafka-http-monitor[lint,types,test]"]

[project.urls]
Source = "https://github.com/jdahlin/kafka-http-monitor"
Tracker = "https://github.com/jdahlin/kafka-http-monitor/issues"

[project.scripts]
kafka-http-monitor = "kafka_http_monitor.producer:run"
kafka-http-copier = "kafka_http_monitor.consumer:run"

[tool.ruff]
src = ["src"]
line-length = 88
select = [
  "F",     # pyflakes
  "E",     # pycodestyle (supersedes pep8)
  "W",     # pycodestyle warnings
  "C90",   # mccabe
  "I",     # isort
  "N",     # pep8-naming
  "D",     # pydocstyle
  "UP",    # pyupgrade
  "ERA",   # eradicate
  "YTT",   # flake8-2020
  "ANN",   # flake8-annotations
  "S",     # flake8-bandit
  "BLE",   # flake8-blind-except
  "FBT",   # flake8-boolean-trap
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "ICN",   # flake8-import-conventions
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "TCH",   # flake8-type-checking
  "ARG",   # flake8-unused-arguments
  "PGH",   # pygrep-hooks
  "PLC",   # pylint Convention
  "PLE",   # pylint Error
  "PLR",   # pylint Refactor
  "PLW",   # pylint Warning
  "RUF",   # ruff-specific rules
]

ignore = [
  "ANN101",
  "ANN102",
  "D211",
  "D213"
]

[tool.ruff.per-file-ignores]
"src/kafka_http_monitor/consumer.py" = []
"src/kafka_http_monitor/tests/test_*.py" = ["S101"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
namespace_packages = false
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "aiokafka",
    "aiokafka.helpers",
    "kafka.errors",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
filterwarnings = []
